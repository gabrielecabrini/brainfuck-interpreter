name: CI/CD Pipeline

on:
  push:
    branches: [ "**" ]
    tags: [ "v*" ]
  pull_request:
permissions:
  contents: write

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Run tests
        run: go test -v ./...

      - name: Generate coverage
        run: go test -coverprofile=coverage.out ./...

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

  release:
    name: Build and Release
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') # only on tags
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/brainfucker-linux-amd64 ./cmd/brainfucker
          GOOS=linux GOARCH=arm64 go build -o dist/brainfucker-linux-arm64 ./cmd/brainfucker
          
          GOOS=darwin GOARCH=amd64 go build -o dist/brainfucker-darwin-amd64 ./cmd/brainfucker
          GOOS=darwin GOARCH=arm64 go build -o dist/brainfucker-darwin-arm64 ./cmd/brainfucker
          
          GOOS=windows GOARCH=amd64 go build -o dist/brainfucker-windows-amd64.exe ./cmd/brainfucker
          GOOS=windows GOARCH=arm64 go build -o dist/brainfucker-windows-arm64.exe ./cmd/brainfucker

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
